lst_diff_profit = []
        for i in range(len(difficulty)):
            lst_diff_profit.append([difficulty[i], profit[i]])
        lst_diff_profit.sort()

        # max profit at each index
        max_profit_till_now = lst_diff_profit[0][1]
        for i in range(1, len(lst_diff_profit)):
            if lst_diff_profit[i][1] < lst_diff_profit[i-1][1]:
                lst_diff_profit[i][1] = lst_diff_profit[i-1][1]
        # print(lst_diff_profit)

        total_profit = 0
        for each_worker in worker:
            total_profit += self.binary_search(lst_diff_profit, each_worker)
        return total_profit

    def binary_search(self, lst_diff_profit, each_worker):
        f, l = 0, len(lst_diff_profit)
        while f < l:
            mid = (f+l)//2
            if lst_diff_profit[mid][0] <= each_worker:
                f = mid + 1
            else:
                l = mid
        
        if l == 0:
            return 0
        else:
            return lst_diff_profit[l-1][1]
