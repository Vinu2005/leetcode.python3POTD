# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def nodesBetweenCriticalPoints(self, head: Optional[ListNode]) -> List[int]:
        critical = []
        prev = head
        cur = head.next
        mn = float('inf')
        i = 1
        
        while cur and cur.next:
            if prev.val < cur.val > cur.next.val or prev.val > cur.val < cur.next.val:
                if critical and i - critical[-1] < mn:
                    mn = i - critical[-1]
                critical.append(i)
            i += 1
            prev = cur
            cur = cur.next
        
        return [mn, critical[-1]-critical[0]] if len(critical) > 1 else [-1, -1]
        
