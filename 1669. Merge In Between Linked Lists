# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeInBetween(self, list1: ListNode, a: int, b: int, list2: ListNode) -> ListNode:
        # Find ath node
        prev_a = None
        node = list1
        for _ in range(a):
            prev_a = node
            node = node.next

        # Find bth node
        prev_b = None
        for _ in range(b - a + 1):
            prev_b = node
            node = node.next

        # Connect the remaining parts of list1 with list2
        prev_a.next = list2
        while list2.next:
            list2 = list2.next
        list2.next = prev_b.next

        return list1
        
