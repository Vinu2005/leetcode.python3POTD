class Solution:
    def cherryPickup(self, grid: List[List[int]]) -> int:
        rows, cols = len(grid), len(grid[0])
        @lru_cache(None)
        def dp(row, col1, col2):
            if row == rows:
                return 0
            result = 0
            result += grid[row][col1]
            if col1 != col2:
                result += grid[row][col2]
            max_result = 0
            for d1 in [-1, 0, 1]:
                for d2 in [-1, 0, 1]:
                    new_col1, new_col2 = col1 + d1, col2 + d2
                    if 0 <= new_col1 < cols and 0 <= new_col2 < cols:
                        max_result = max(max_result, dp(row + 1, new_col1, new_col2))
            result += max_result
            return result
        return dp(0, 0, cols - 1)
        
