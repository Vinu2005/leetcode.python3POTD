class Solution:
    def minFallingPathSum(self, grid: List[List[int]]) -> int:
        n = len(grid)
        
        # Initialize the dp array with the first row of the grid
        dp = [row[:] for row in grid]
        
        # Iterate over the remaining rows
        for i in range(1, n):
            # Iterate over each column in the current row
            for j in range(n):
                # Initialize the minimum sum for the current cell
                min_sum = float('inf')
                
                # Iterate over the columns in the previous row
                for k in range(n):
                    if k != j:
                        # Update the minimum sum by considering the previous row and excluding the same column
                        min_sum = min(min_sum, dp[i - 1][k])
                
                # Update the current cell with the minimum sum plus the value from the current grid cell
                dp[i][j] += min_sum
        
        # Return the minimum value from the last row of dp
        return min(dp[-1])
        
